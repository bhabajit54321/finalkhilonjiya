Building Android
5m 42s





== Building for Android ==

> flutter build appbundle --debug


== Building for Android ==

> flutter build appbundle --debug
Resolving dependencies...
Downloading packages...
  _fe_analyzer_shared 76.0.0 (85.0.0 available)
  _flutterfire_internals 1.3.35 (1.3.58 available)
  analyzer 6.11.0 (7.5.5 available)
  archive 3.6.1 (4.0.7 available)
  bloc 8.1.4 (9.0.0 available)
  bloc_test 9.1.7 (10.0.0 available)
  characters 1.4.0 (1.4.1 available)
  connectivity_plus 5.0.2 (6.1.4 available)
  connectivity_plus_platform_interface 1.2.4 (2.0.1 available)
  dart_style 2.3.8 (3.1.0 available)
  device_info_plus 9.1.2 (11.5.0 available)
  facebook_auth_desktop 1.0.3 (2.1.1 available)
  file_picker 6.2.1 (10.2.0 available)
  firebase_core 2.32.0 (3.15.1 available)
  firebase_core_platform_interface 5.4.2 (6.0.0 available)
  firebase_core_web 2.24.0 (2.24.1 available)
  firebase_messaging 14.7.10 (15.2.9 available)
  firebase_messaging_platform_interface 4.5.37 (4.6.9 available)
  firebase_messaging_web 3.5.18 (3.10.9 available)
  fl_chart 0.65.0 (1.0.0 available)
  flutter_bloc 8.1.6 (9.1.1 available)
  flutter_facebook_auth 6.2.0 (7.1.2 available)
  flutter_facebook_auth_platform_interface 5.0.0 (6.1.2 available)
  flutter_facebook_auth_web 5.0.0 (6.1.2 available)
  flutter_launcher_icons 0.13.1 (0.14.4 available)
  flutter_lints 5.0.0 (6.0.0 available)
  flutter_local_notifications 16.3.3 (19.3.0 available)
  flutter_local_notifications_linux 4.0.1 (6.0.0 available)
  flutter_local_notifications_platform_interface 7.2.0 (9.1.0 available)
  flutter_native_splash 2.4.4 (2.4.6 available)
  flutter_secure_storage_linux 1.2.3 (2.0.1 available)
  flutter_secure_storage_macos 3.1.3 (4.0.0 available)
  flutter_secure_storage_platform_interface 1.1.2 (2.0.1 available)
  flutter_secure_storage_web 1.2.1 (2.0.0 available)
  flutter_secure_storage_windows 3.1.2 (4.0.0 available)
  geocoding 2.2.2 (4.0.0 available)
  geocoding_android 3.3.1 (4.0.1 available)
  geocoding_ios 2.3.0 (3.0.2 available)
  geolocator 10.1.1 (14.0.2 available)
  geolocator_android 4.6.2 (5.0.2 available)
  geolocator_web 2.2.1 (4.1.3 available)
  google_sign_in 6.3.0 (7.1.0 available)
  google_sign_in_android 6.2.1 (7.0.1 available)
  google_sign_in_ios 5.9.0 (6.0.1 available)
  google_sign_in_platform_interface 2.5.0 (3.0.0 available)
  google_sign_in_web 0.12.4+4 (1.0.0 available)
  image 4.3.0 (4.5.4 available)
  image_cropper 5.0.1 (9.1.0 available)
  image_cropper_for_web 3.0.0 (6.1.0 available)
  image_cropper_platform_interface 5.0.0 (7.1.0 available)
  internet_connection_checker 1.0.0+1 (3.0.1 available)
  js 0.6.7 (0.7.2 available)
  json_serializable 6.9.0 (6.9.5 available)
  leak_tracker 10.0.9 (11.0.1 available)
  leak_tracker_flutter_testing 3.0.9 (3.0.10 available)
  leak_tracker_testing 3.0.1 (3.0.2 available)
  lints 5.1.1 (6.0.0 available)
  location 5.0.3 (8.0.1 available)
  location_platform_interface 3.1.2 (6.0.1 available)
  location_web 4.2.0 (6.0.1 available)
  lottie 2.7.0 (3.3.1 available)
  material_color_utilities 0.11.1 (0.13.0 available)
  meta 1.16.0 (1.17.0 available)
  mime 1.0.6 (2.0.0 available)
  mockito 5.4.5 (5.4.6 available)
  package_info_plus 4.2.0 (8.3.0 available)
  package_info_plus_platform_interface 2.0.1 (3.2.0 available)
  permission_handler 11.4.0 (12.0.1 available)
  permission_handler_android 12.1.0 (13.0.1 available)
  petitparser 6.1.0 (7.0.0 available)
  photo_view 0.14.0 (0.15.0 available)
  protobuf 3.1.0 (4.1.0 available)
  retrofit_generator 8.2.1 (9.7.0 available)
  share_plus 7.2.2 (11.0.0 available)
  share_plus_platform_interface 3.4.0 (6.0.0 available)
  sizer 2.0.15 (3.0.5 available)
  source_gen 1.5.0 (2.0.0 available)
  source_helper 1.3.5 (1.3.6 available)
  test 1.25.15 (1.26.2 available)
  test_api 0.7.4 (0.7.6 available)
  test_core 0.6.8 (0.6.11 available)
  timezone 0.9.4 (0.10.1 available)
  vector_math 2.1.4 (2.2.0 available)
  vm_service 15.0.0 (15.0.2 available)
  win32_registry 1.1.5 (2.1.0 available)
  xml 6.5.0 (6.6.0 available)
Got dependencies!
86 packages have newer versions incompatible with dependency constraints.
Try `flutter pub outdated` for more information.
Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Resolving dependencies...
Downloading packages...
  _fe_analyzer_shared 76.0.0 (85.0.0 available)
  _flutterfire_internals 1.3.35 (1.3.58 available)
  analyzer 6.11.0 (7.5.5 available)
  archive 3.6.1 (4.0.7 available)
  bloc 8.1.4 (9.0.0 available)
  bloc_test 9.1.7 (10.0.0 available)
  characters 1.4.0 (1.4.1 available)
  connectivity_plus 5.0.2 (6.1.4 available)
  connectivity_plus_platform_interface 1.2.4 (2.0.1 available)
  dart_style 2.3.8 (3.1.0 available)
  device_info_plus 9.1.2 (11.5.0 available)
  facebook_auth_desktop 1.0.3 (2.1.1 available)
  file_picker 6.2.1 (10.2.0 available)
  firebase_core 2.32.0 (3.15.1 available)
  firebase_core_platform_interface 5.4.2 (6.0.0 available)
  firebase_core_web 2.24.0 (2.24.1 available)
  firebase_messaging 14.7.10 (15.2.9 available)
  firebase_messaging_platform_interface 4.5.37 (4.6.9 available)
  firebase_messaging_web 3.5.18 (3.10.9 available)
  fl_chart 0.65.0 (1.0.0 available)
  flutter_bloc 8.1.6 (9.1.1 available)
  flutter_facebook_auth 6.2.0 (7.1.2 available)
  flutter_facebook_auth_platform_interface 5.0.0 (6.1.2 available)
  flutter_facebook_auth_web 5.0.0 (6.1.2 available)
  flutter_launcher_icons 0.13.1 (0.14.4 available)
  flutter_lints 5.0.0 (6.0.0 available)
  flutter_local_notifications 16.3.3 (19.3.0 available)
  flutter_local_notifications_linux 4.0.1 (6.0.0 available)
  flutter_local_notifications_platform_interface 7.2.0 (9.1.0 available)
  flutter_native_splash 2.4.4 (2.4.6 available)
  flutter_secure_storage_linux 1.2.3 (2.0.1 available)
  flutter_secure_storage_macos 3.1.3 (4.0.0 available)
  flutter_secure_storage_platform_interface 1.1.2 (2.0.1 available)
  flutter_secure_storage_web 1.2.1 (2.0.0 available)
  flutter_secure_storage_windows 3.1.2 (4.0.0 available)
  geocoding 2.2.2 (4.0.0 available)
  geocoding_android 3.3.1 (4.0.1 available)
  geocoding_ios 2.3.0 (3.0.2 available)
  geolocator 10.1.1 (14.0.2 available)
  geolocator_android 4.6.2 (5.0.2 available)
  geolocator_web 2.2.1 (4.1.3 available)
  google_sign_in 6.3.0 (7.1.0 available)
  google_sign_in_android 6.2.1 (7.0.1 available)
  google_sign_in_ios 5.9.0 (6.0.1 available)
  google_sign_in_platform_interface 2.5.0 (3.0.0 available)
  google_sign_in_web 0.12.4+4 (1.0.0 available)
  image 4.3.0 (4.5.4 available)
  image_cropper 5.0.1 (9.1.0 available)
  image_cropper_for_web 3.0.0 (6.1.0 available)
  image_cropper_platform_interface 5.0.0 (7.1.0 available)
  internet_connection_checker 1.0.0+1 (3.0.1 available)
  js 0.6.7 (0.7.2 available)
  json_serializable 6.9.0 (6.9.5 available)
  leak_tracker 10.0.9 (11.0.1 available)
  leak_tracker_flutter_testing 3.0.9 (3.0.10 available)
  leak_tracker_testing 3.0.1 (3.0.2 available)
  lints 5.1.1 (6.0.0 available)
  location 5.0.3 (8.0.1 available)
  location_platform_interface 3.1.2 (6.0.1 available)
  location_web 4.2.0 (6.0.1 available)
  lottie 2.7.0 (3.3.1 available)
  material_color_utilities 0.11.1 (0.13.0 available)
  meta 1.16.0 (1.17.0 available)
  mime 1.0.6 (2.0.0 available)
  mockito 5.4.5 (5.4.6 available)
  package_info_plus 4.2.0 (8.3.0 available)
  package_info_plus_platform_interface 2.0.1 (3.2.0 available)
  permission_handler 11.4.0 (12.0.1 available)
  permission_handler_android 12.1.0 (13.0.1 available)
  petitparser 6.1.0 (7.0.0 available)
  photo_view 0.14.0 (0.15.0 available)
  protobuf 3.1.0 (4.1.0 available)
  retrofit_generator 8.2.1 (9.7.0 available)
  share_plus 7.2.2 (11.0.0 available)
  share_plus_platform_interface 3.4.0 (6.0.0 available)
  sizer 2.0.15 (3.0.5 available)
  source_gen 1.5.0 (2.0.0 available)
  source_helper 1.3.5 (1.3.6 available)
  test 1.25.15 (1.26.2 available)
  test_api 0.7.4 (0.7.6 available)
  test_core 0.6.8 (0.6.11 available)
  timezone 0.9.4 (0.10.1 available)
  vector_math 2.1.4 (2.2.0 available)
  vm_service 15.0.0 (15.0.2 available)
  win32_registry 1.1.5 (2.1.0 available)
  xml 6.5.0 (6.6.0 available)
Got dependencies!
86 packages have newer versions incompatible with dependency constraints.
Try `flutter pub outdated` for more information.
Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Running Gradle task 'bundleDebug'...                            Running Gradle task 'bundleDebug'...                            
Checking the license for package NDK (Side by side) 26.3.11579264 in /usr/local/share/android-sdk/licenses
License for package NDK (Side by side) 26.3.11579264 accepted.
Preparing "Install NDK (Side by side) 26.3.11579264 v.26.3.11579264".

Checking the license for package NDK (Side by side) 26.3.11579264 in /usr/local/share/android-sdk/licenses
License for package NDK (Side by side) 26.3.11579264 accepted.
Preparing "Install NDK (Side by side) 26.3.11579264 v.26.3.11579264".
"Install NDK (Side by side) 26.3.11579264 v.26.3.11579264" ready.
Installing NDK (Side by side) 26.3.11579264 in /usr/local/share/android-sdk/ndk/26.3.11579264
"Install NDK (Side by side) 26.3.11579264 v.26.3.11579264" complete.
"Install NDK (Side by side) 26.3.11579264 v.26.3.11579264" finished.
"Install NDK (Side by side) 26.3.11579264 v.26.3.11579264" ready.
Installing NDK (Side by side) 26.3.11579264 in /usr/local/share/android-sdk/ndk/26.3.11579264
"Install NDK (Side by side) 26.3.11579264 v.26.3.11579264" complete.
"Install NDK (Side by side) 26.3.11579264 v.26.3.11579264" finished.
Checking the license for package Android SDK Build-Tools 34 in /usr/local/share/android-sdk/licenses
License for package Android SDK Build-Tools 34 accepted.
Preparing "Install Android SDK Build-Tools 34 v.34.0.0".
Checking the license for package Android SDK Build-Tools 34 in /usr/local/share/android-sdk/licenses
License for package Android SDK Build-Tools 34 accepted.
Preparing "Install Android SDK Build-Tools 34 v.34.0.0".
"Install Android SDK Build-Tools 34 v.34.0.0" ready.
Installing Android SDK Build-Tools 34 in /usr/local/share/android-sdk/build-tools/34.0.0
"Install Android SDK Build-Tools 34 v.34.0.0" complete.
"Install Android SDK Build-Tools 34 v.34.0.0" finished.
"Install Android SDK Build-Tools 34 v.34.0.0" ready.
Installing Android SDK Build-Tools 34 in /usr/local/share/android-sdk/build-tools/34.0.0
"Install Android SDK Build-Tools 34 v.34.0.0" complete.
"Install Android SDK Build-Tools 34 v.34.0.0" finished.
Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

lib/presentation/login_screen/login_screen.dart:14:82: Error: Can't find '}' to match '{'.
class _LoginScreenState extends State<LoginScreen> with TickerProviderStateMixin {
                                                                                 ^
lib/presentation/login_screen/login_screen.dart:1:1: Error: Variables must be declared using the keywords 'const', 'final', 'var' or a type name.
Try adding the name of the type of the variable or the keyword 'var'.
iimport 'package:flutter/material.dart';
^^^^^^^
lib/presentation/login_screen/login_screen.dart:1:1: Error: Expected ';' after this.
iimport 'package:flutter/material.dart';
^^^^^^^
lib/presentation/login_screen/login_screen.dart:1:9: Error: Expected a declaration, but got ''package:flutter/material.dart''.
iimport 'package:flutter/material.dart';
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presentation/login_screen/login_screen.dart:1:40: Error: Unexpected token ';'.
iimport 'package:flutter/material.dart';
                                       ^
lib/presentation/login_screen/login_screen.dart:2:1: Error: Directives must appear before any declarations.
Try moving the directive before any declarations.
import 'package:flutter/services.dart';
^^^^^^
lib/presentation/login_screen/login_screen.dart:3:1: Error: Directives must appear before any declarations.
Try moving the directive before any declarations.
import 'package:sizer/sizer.dart';
^^^^^^
lib/presentation/login_screen/login_screen.dart:5:1: Error: Directives must appear before any declarations.
Try moving the directive before any declarations.
import '../../core/app_export.